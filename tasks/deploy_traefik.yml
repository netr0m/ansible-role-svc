---
- name: Ensure traefik directory is present
  ansible.builtin.file:
    path: "{{ svc_traefik_directory_path }}"
    state: directory
    owner: "{{ svc_traefik_directory_owner }}"
    group: "{{ svc_traefik_directory_group }}"
    mode: "{{ svc_traefik_directory_mode }}"

- name: Gather Traefik middleware entries
  block:
    - name: Find variables starting with '{{ __svc_traefik_middleware_var_prefix }}'
      ansible.builtin.set_fact:
        __svc_traefik_mwr_matches: "{{ lookup('ansible.builtin.varnames', '^{{ __svc_traefik_middleware_var_prefix }}(_)?.*') | split(',') }}"

    - name: Merge extra Traefik middleware entries
      ansible.builtin.set_fact:
        __svc_traefik_extra_middlewares: "{{ __svc_traefik_extra_middlewares | combine(lookup('ansible.builtin.vars', item)) }}"
      with_items: "{{ __svc_traefik_mwr_matches }}"

- name: Manage traefik configuration
  block:
    - name: Ensure traefik config subdirectory is present
      ansible.builtin.file:
        path: "{{ svc_traefik_config_directory_path }}"
        state: directory
        owner: "{{ svc_traefik_directory_owner }}"
        group: "{{ svc_traefik_directory_group }}"
        mode: "{{ svc_traefik_directory_mode }}"

    - name: Write traefik config to file
      ansible.builtin.template:
        src: etc/traefik/traefik.yml.j2
        dest: "{{ svc_traefik_config_path }}"
        owner: "{{ svc_traefik_directory_owner }}"
        group: "{{ svc_traefik_directory_group }}"
        mode: "{{ svc_traefik_directory_mode }}"
        backup: true
      register: traefik_config_file_output

    - name: Write traefik http config to file
      ansible.builtin.template:
        src: etc/traefik/config/http.yml.j2
        dest: "{{ svc_traefik_config_directory_path }}/http.yml"
        owner: "{{ svc_traefik_directory_owner }}"
        group: "{{ svc_traefik_directory_group }}"
        mode: "{{ svc_traefik_directory_mode }}"
        backup: true
      register: traefik_http_config_file_output

    - name: Manage traefik ACME config
      block:
        - name: Ensure traefik ACME subdirectory is present
          ansible.builtin.file:
            path: "{{ svc_traefik_acme_directory_path }}"
            state: directory
            owner: "{{ svc_traefik_directory_owner }}"
            group: "{{ svc_traefik_directory_group }}"
            mode: "{{ svc_traefik_acme_file_mode }}"

        - name: Check for presence of traefik ACME file
          ansible.builtin.stat:
            path: "{{ svc_traefik_acme_path }}"
          register: traefik_acme_file_stat_output

        - name: Ensure proper traefik ACME file permissions
          ansible.builtin.file:
            path: "{{ svc_traefik_acme_path }}"
            state: "{{ 'file' if traefik_acme_file_stat_output.stat.exists else 'touch' }}"
            owner: "{{ svc_traefik_directory_owner }}"
            group: "{{ svc_traefik_directory_group }}"
            mode: "{{ svc_traefik_acme_file_mode }}"

- name: Manage service files
  block:
    - name: Write traefik environment variables to file
      ansible.builtin.template:
        src: template.env.j2
        dest: "{{ svc_traefik_env_file_path }}"
        owner: "{{ svc_traefik_directory_owner }}"
        group: "{{ svc_traefik_directory_group }}"
        mode: "{{ svc_traefik_env_file_mode }}"
        backup: true
      vars:
        _env_vars: "{{ svc_traefik_env_vars | combine(svc_traefik_acme_settings) }}"
      register: traefik_env_file_output

    - name: Write socket-proxy environment variables to file
      ansible.builtin.template:
        src: template.env.j2
        dest: "{{ svc_socketproxy_env_file_path }}"
        owner: "{{ svc_traefik_directory_owner }}"
        group: "{{ svc_traefik_directory_group }}"
        mode: "{{ svc_socketproxy_env_file_mode }}"
        backup: true
      vars:
        _env_vars: "{{ svc_socketproxy_settings | combine(svc_socketproxy_env_vars_baseline) }}"
      register: socketproxy_env_file_output

    - name: Copy compose services file into place
      ansible.builtin.template:
        src: compose/traefik.yml.j2
        dest: "{{ svc_traefik_compose_path }}"
        owner: "{{ svc_traefik_directory_owner }}"
        group: "{{ svc_traefik_directory_group }}"
        mode: "{{ svc_traefik_directory_mode }}"
        backup: true
        validate: docker compose -f %s config -q
      register: compose_file_output

- name: Take down services due to changed compose file
  community.docker.docker_compose_v2:
    project_src: "{{ svc_traefik_directory_path }}"
    files: "{{ compose_file_output.backup_file }}"
    state: absent
    remove_orphans: true
  when: compose_file_output.backup_file is defined

- name: Pull container images
  community.docker.docker_image:
    name: "{{ item }}"
    source: pull
  with_items:
    - "{{ svc_socketproxy_container_image }}"
    - "{{ svc_traefik_container_image }}"

- name: Deploy traefik services
  community.docker.docker_compose_v2:
    project_src: "{{ svc_traefik_directory_path }}"
    state: "{{ 'present' if svc_use_traefik else 'absent' }}"
    wait: true
    wait_timeout: "{{ svc_compose_wait_timeout }}"
  register: deploy_traefik_services_output
...
